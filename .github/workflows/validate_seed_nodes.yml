name: Validate Seed Nodes Configuration

on:
  push:
    branches: [ "master", "main" ]
    paths:
      - 'seed-nodes.json'
      - 'utils/seed_nodes_schema.json'
      - 'utils/validate_seed_nodes.py'
  pull_request:
    branches: [ "master", "main" ]
    paths:
      - 'seed-nodes.json'
      - 'utils/seed_nodes_schema.json'
      - 'utils/validate_seed_nodes.py'
  schedule:
    # Run every 6 hours at minute 0 (00:00, 06:00, 12:00, 18:00 UTC)
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-22.04
    name: Validate Seed Nodes Configuration
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r utils/requirements.txt

      - name: Check seed nodes file exists
        run: |
          if [ ! -f "seed-nodes.json" ]; then
            echo "‚ùå seed-nodes.json file not found!"
            exit 1
          fi
          echo "‚úì seed-nodes.json file exists"

      - name: Check schema file exists
        run: |
          if [ ! -f "utils/seed_nodes_schema.json" ]; then
            echo "‚ùå utils/seed_nodes_schema.json file not found!"
            exit 1
          fi
          echo "‚úì utils/seed_nodes_schema.json file exists"
         
      - name: Validate seed nodes JSON schema and WSS connectivity
        run: |
          echo "Validating seed-nodes.json against schema and testing WSS connectivity..."
          echo "Note: WSS connectivity tests run for nodes with 'wss': true"
          python3 utils/validate_seed_nodes.py

      - name: Validation Summary
        run: |
          echo "üéâ All seed nodes validation checks passed!"
          echo "‚úì Schema validation successful"
          echo "‚úì All seed nodes are properly formatted"
          echo "‚úì Host addresses are valid (domains/IPs)"
          echo "‚úì Host types are correctly classified (domain/ipv4/ipv6)"
          echo "‚úì netids are valid (1-14428 range)"
          echo "‚úì Contact information is properly structured"
          echo "‚úì WSS connectivity verified for all WSS-enabled seed nodes"

      - name: Send Discord Success Notification
        if: success() && github.event_name == 'schedule'
        run: |
          WEBHOOK_URL="${{ secrets.DISCORD_WEBHOOK_URL }}"
          if [ -z "$WEBHOOK_URL" ]; then
            echo "Warning: DISCORD_WEBHOOK_URL secret not set, skipping Discord notification"
            exit 0
          fi
          
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          COMMIT_SHA="${{ github.sha }}"
          COMMIT_SHORT="${COMMIT_SHA:0:7}"
          REPO_URL="${{ github.server_url }}/${{ github.repository }}"
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          # Create Discord embed payload
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "embeds": [{
                   "title": "‚úÖ Seed Nodes Validation Successful",
                   "description": "All seed nodes passed validation and WSS connectivity checks",
                   "color": 3066993,
                   "fields": [
                     {
                       "name": "Repository",
                       "value": "[${{ github.repository }}]('$REPO_URL')",
                       "inline": true
                     },
                     {
                       "name": "Commit",
                       "value": "['$COMMIT_SHORT']('$REPO_URL'/commit/'$COMMIT_SHA')",
                       "inline": true
                     },
                     {
                       "name": "Workflow Run",
                       "value": "[View Details]('$RUN_URL')",
                       "inline": true
                     }
                   ],
                   "timestamp": "'$TIMESTAMP'",
                   "footer": {
                     "text": "Komodo Platform Seed Nodes Monitor"
                   }
                 }]
               }' \
               "$WEBHOOK_URL"

      - name: Send Discord Failure Notification
        if: failure() && github.event_name == 'schedule'
        run: |
          WEBHOOK_URL="${{ secrets.DISCORD_WEBHOOK_URL }}"
          if [ -z "$WEBHOOK_URL" ]; then
            echo "Warning: DISCORD_WEBHOOK_URL secret not set, skipping Discord notification"
            exit 0
          fi
          
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          COMMIT_SHA="${{ github.sha }}"
          COMMIT_SHORT="${COMMIT_SHA:0:7}"
          REPO_URL="${{ github.server_url }}/${{ github.repository }}"
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          # Create Discord embed payload
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "content": "<@423176312354635779> <@419964976397156352>",
                 "embeds": [{
                   "title": "‚ùå Seed Nodes Validation Failed",
                   "description": "One or more seed nodes failed validation or WSS connectivity checks",
                   "color": 15158332,
                   "fields": [
                     {
                       "name": "Repository",
                       "value": "[${{ github.repository }}]('$REPO_URL')",
                       "inline": true
                     },
                     {
                       "name": "Commit",
                       "value": "['$COMMIT_SHORT']('$REPO_URL'/commit/'$COMMIT_SHA')",
                       "inline": true
                     },
                     {
                       "name": "Workflow Run",
                       "value": "[View Details]('$RUN_URL')",
                       "inline": true
                     }
                   ],
                   "timestamp": "'$TIMESTAMP'",
                   "footer": {
                     "text": "Komodo Platform Seed Nodes Monitor"
                   }
                 }]
               }' \
               "$WEBHOOK_URL" 